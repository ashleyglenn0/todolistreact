name: Deploy Frontend to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy Frontend
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the repository
    - name: Checkout repository
      uses: actions/checkout@v3

    # Step 2: Set up Node.js
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18

    # Step 3: Install dependencies and build the app
    - name: Install dependencies
      run: npm install
    - name: Build the frontend
      run: npm run build

    # Step 4: Remove Existing Deployment
    - name: Clean Deployment Directory on EC2
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          sudo rm -rf /home/ec2-user/dist/*

    # Step 5: Deploy Build Files
    - name: Copy Build Files to EC2
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        source: dist/
        target: /home/ec2-user/dist

    # Step 6: Configure Permissions
    - name: Configure Permissions
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          sudo chown -R ec2-user:nginx /home/ec2-user/dist
          sudo chmod -R 755 /home/ec2-user/dist
          sudo semanage fcontext -a -t httpd_sys_content_t "/home/ec2-user/dist(/.*)?"
          sudo restorecon -R /home/ec2-user/dist

    # Step 7: Restart Nginx
    - name: Restart Nginx
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          sudo systemctl restart nginx
